# The test utility lib.
add_library(zis_test_util STATIC "test.c")

function(_zis_test_filename_to_test_name filename out_test_name)
    get_filename_component(test_name "${filename}" NAME_WLE)
    set(${out_test_name} "${test_name}" PARENT_SCOPE)
endfunction()

set(_zis_bundled_c_tests)
set(_zis_bundled_c_test_incdir)

function(_zis_bundled_c_tests_setup)
    # See `zis_add_bundled_c_test()`.
    set(bundle_tgt_name "zis_test_bundle")
    create_test_sourcelist(src_list "${bundle_tgt_name}_main.c" ${_zis_bundled_c_tests})
    add_executable(${bundle_tgt_name} ${src_list})
    target_link_libraries(${bundle_tgt_name} PRIVATE zis_test_util ${zis_core_tgt})
    target_include_directories(${bundle_tgt_name} PRIVATE ${_zis_bundled_c_test_incdir})
endfunction()

## zis_add_bundled_c_test("filename")
## Call `zis_add_bundled_c_tests_main()` at the end.
function(zis_add_bundled_c_test filename)
    set(bundle_tgt_name "zis_test_bundle")
    _zis_test_filename_to_test_name("${filename}" test_name)
    cmake_parse_arguments(PARSE_ARGV 1 arg "" "" "INCLUDE_DIR")
    if(NOT _zis_bundled_c_tests)
        set(_zis_bundled_c_tests "${filename}" PARENT_SCOPE)
        cmake_language(DEFER CALL _zis_bundled_c_tests_setup)
    else()
        set(_zis_bundled_c_tests "${_zis_bundled_c_tests};${filename}" PARENT_SCOPE)
    endif()
    add_test(NAME ${test_name} COMMAND "$<TARGET_FILE:${bundle_tgt_name}>" ${test_name})
    if(DEFINED arg_INCLUDE_DIR)
        list(APPEND _zis_bundled_c_test_incdir ${arg_INCLUDE_DIR})
        set(_zis_bundled_c_test_incdir "${_zis_bundled_c_test_incdir}" PARENT_SCOPE)
    endif()
endfunction()

## zis_add_simple_c_test("filename" [LINK_CORE] [ENABLE_EXPORTS] [INCLUDE_DIR ...] [LINK ...] [PROPERTIES ...])
function(zis_add_simple_c_test filename)
    _zis_test_filename_to_test_name("${filename}" test_name)
    set(target_name "zis_test_${test_name}")
    cmake_parse_arguments(PARSE_ARGV 1 arg "LINK_CORE;ENABLE_EXPORTS" "" "INCLUDE_DIR;LINK;PROPERTIES")
    add_executable(${target_name} "${filename}")
    target_link_libraries(${target_name} PRIVATE zis_test_util)
    add_test(NAME ${test_name} COMMAND "$<TARGET_FILE:${target_name}>")
    if(${arg_LINK_CORE})
        target_link_libraries(${target_name} PRIVATE ${zis_core_tgt})
    endif()
    if(${arg_ENABLE_EXPORTS})
        set_target_properties(${target_name} PROPERTIES ENABLE_EXPORTS TRUE)
    endif()
    if(DEFINED arg_INCLUDE_DIR)
        target_include_directories(${target_name} PRIVATE ${arg_INCLUDE_DIR})
    endif()
    if(DEFINED arg_LINK)
        target_link_libraries(${target_name} PRIVATE ${arg_LINK})
    endif()
    if(DEFINED arg_PROPERTIES)
        set_target_properties(${target_name} PROPERTIES ${arg_PROPERTIES})
    endif()
endfunction()

## zis_add_script_test("filename")
function(zis_add_script_test filename)
    _zis_test_filename_to_test_name("${filename}" test_name zis_test_util)
    set(filename "${CMAKE_CURRENT_SOURCE_DIR}/${filename}")
    add_test(
        NAME ${test_name}
        COMMAND "$<TARGET_FILE:${zis_start_tgt}>" "@testing" "${filename}"
    )
    set_tests_properties(
        ${test_name} PROPERTIES
        ENVIRONMENT "ZIS_PATH=$<TARGET_FILE_DIR:zis_mod_testing>"
        DEPENDS ${zis_start_tgt}
    )
endfunction()

if(ZIS_BUILD_CORE)
    zis_add_bundled_c_test(core_bits.c       )
    zis_add_simple_c_test (core_fsutil.c     )
    zis_add_bundled_c_test(core_instr.c      )
    zis_add_bundled_c_test(core_api.c        )
    zis_add_simple_c_test (core_api_c89.c    LINK_CORE PROPERTIES C_STANDARD 90 C_STANDARD_REQUIRED TRUE)
    zis_add_simple_c_test (core_api_cxx.cc   LINK_CORE ENABLE_EXPORTS LINK "$<$<BOOL:${UNIX}>:dl>")
    zis_add_bundled_c_test(core_invoke.c     )
    zis_add_bundled_c_test(core_gc.c         )
    zis_add_bundled_c_test(core_compile.c    )
endif()
if(ZIS_BUILD_MODULES)
    zis_add_bundled_c_test(core_modlist.c    INCLUDE_DIR ${zis_modules_header_dir})
endif()
if(ZIS_BUILD_START)
    zis_add_bundled_c_test(start_cliutil.c   )
    include               (start_run.cmake   )
endif()
if(ZIS_MOD_TESTING)
    zis_add_script_test   (core_builtins.zis )
endif()
